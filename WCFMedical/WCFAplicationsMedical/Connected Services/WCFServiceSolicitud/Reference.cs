//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFAplicationsMedical.WCFServiceSolicitud {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Solicitud", Namespace="http://schemas.datacontract.org/2004/07/WCFServices.Dominio")]
    [System.SerializableAttribute()]
    public partial class Solicitud : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistritoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Nu_SolicitudField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int co_ClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int dni_medioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string estadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fe_registroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string observaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direccion {
            get {
                return this.DireccionField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionField, value) != true)) {
                    this.DireccionField = value;
                    this.RaisePropertyChanged("Direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Distrito {
            get {
                return this.DistritoField;
            }
            set {
                if ((object.ReferenceEquals(this.DistritoField, value) != true)) {
                    this.DistritoField = value;
                    this.RaisePropertyChanged("Distrito");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Nu_Solicitud {
            get {
                return this.Nu_SolicitudField;
            }
            set {
                if ((this.Nu_SolicitudField.Equals(value) != true)) {
                    this.Nu_SolicitudField = value;
                    this.RaisePropertyChanged("Nu_Solicitud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int co_Cliente {
            get {
                return this.co_ClienteField;
            }
            set {
                if ((this.co_ClienteField.Equals(value) != true)) {
                    this.co_ClienteField = value;
                    this.RaisePropertyChanged("co_Cliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int dni_medio {
            get {
                return this.dni_medioField;
            }
            set {
                if ((this.dni_medioField.Equals(value) != true)) {
                    this.dni_medioField = value;
                    this.RaisePropertyChanged("dni_medio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string estado {
            get {
                return this.estadoField;
            }
            set {
                if ((object.ReferenceEquals(this.estadoField, value) != true)) {
                    this.estadoField = value;
                    this.RaisePropertyChanged("estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fe_registro {
            get {
                return this.fe_registroField;
            }
            set {
                if ((object.ReferenceEquals(this.fe_registroField, value) != true)) {
                    this.fe_registroField = value;
                    this.RaisePropertyChanged("fe_registro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string observa {
            get {
                return this.observaField;
            }
            set {
                if ((object.ReferenceEquals(this.observaField, value) != true)) {
                    this.observaField = value;
                    this.RaisePropertyChanged("observa");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFServices.Errores")]
    [System.SerializableAttribute()]
    public partial class RepetidoException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoField, value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFServiceSolicitud.ISolicitudes")]
    public interface ISolicitudes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolicitudes/CrearSolicitud", ReplyAction="http://tempuri.org/ISolicitudes/CrearSolicitudResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFAplicationsMedical.WCFServiceSolicitud.RepetidoException), Action="http://tempuri.org/ISolicitudes/CrearSolicitudRepetidoExceptionFault", Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFServices.Errores")]
        WCFAplicationsMedical.WCFServiceSolicitud.Solicitud CrearSolicitud(WCFAplicationsMedical.WCFServiceSolicitud.Solicitud SolicitudACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolicitudes/CrearSolicitud", ReplyAction="http://tempuri.org/ISolicitudes/CrearSolicitudResponse")]
        System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceSolicitud.Solicitud> CrearSolicitudAsync(WCFAplicationsMedical.WCFServiceSolicitud.Solicitud SolicitudACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolicitudes/ObtenerSolicitud", ReplyAction="http://tempuri.org/ISolicitudes/ObtenerSolicitudResponse")]
        WCFAplicationsMedical.WCFServiceSolicitud.Solicitud ObtenerSolicitud(int Nu_Solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolicitudes/ObtenerSolicitud", ReplyAction="http://tempuri.org/ISolicitudes/ObtenerSolicitudResponse")]
        System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceSolicitud.Solicitud> ObtenerSolicitudAsync(int Nu_Solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolicitudes/ModificarSolicitud", ReplyAction="http://tempuri.org/ISolicitudes/ModificarSolicitudResponse")]
        WCFAplicationsMedical.WCFServiceSolicitud.Solicitud ModificarSolicitud(WCFAplicationsMedical.WCFServiceSolicitud.Solicitud SolicitudAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolicitudes/ModificarSolicitud", ReplyAction="http://tempuri.org/ISolicitudes/ModificarSolicitudResponse")]
        System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceSolicitud.Solicitud> ModificarSolicitudAsync(WCFAplicationsMedical.WCFServiceSolicitud.Solicitud SolicitudAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolicitudes/EliminarSolicitud", ReplyAction="http://tempuri.org/ISolicitudes/EliminarSolicitudResponse")]
        void EliminarSolicitud(int Nu_Solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolicitudes/EliminarSolicitud", ReplyAction="http://tempuri.org/ISolicitudes/EliminarSolicitudResponse")]
        System.Threading.Tasks.Task EliminarSolicitudAsync(int Nu_Solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolicitudes/ListarSolicitudes", ReplyAction="http://tempuri.org/ISolicitudes/ListarSolicitudesResponse")]
        WCFAplicationsMedical.WCFServiceSolicitud.Solicitud[] ListarSolicitudes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolicitudes/ListarSolicitudes", ReplyAction="http://tempuri.org/ISolicitudes/ListarSolicitudesResponse")]
        System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceSolicitud.Solicitud[]> ListarSolicitudesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISolicitudesChannel : WCFAplicationsMedical.WCFServiceSolicitud.ISolicitudes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SolicitudesClient : System.ServiceModel.ClientBase<WCFAplicationsMedical.WCFServiceSolicitud.ISolicitudes>, WCFAplicationsMedical.WCFServiceSolicitud.ISolicitudes {
        
        public SolicitudesClient() {
        }
        
        public SolicitudesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SolicitudesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SolicitudesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SolicitudesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFAplicationsMedical.WCFServiceSolicitud.Solicitud CrearSolicitud(WCFAplicationsMedical.WCFServiceSolicitud.Solicitud SolicitudACrear) {
            return base.Channel.CrearSolicitud(SolicitudACrear);
        }
        
        public System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceSolicitud.Solicitud> CrearSolicitudAsync(WCFAplicationsMedical.WCFServiceSolicitud.Solicitud SolicitudACrear) {
            return base.Channel.CrearSolicitudAsync(SolicitudACrear);
        }
        
        public WCFAplicationsMedical.WCFServiceSolicitud.Solicitud ObtenerSolicitud(int Nu_Solicitud) {
            return base.Channel.ObtenerSolicitud(Nu_Solicitud);
        }
        
        public System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceSolicitud.Solicitud> ObtenerSolicitudAsync(int Nu_Solicitud) {
            return base.Channel.ObtenerSolicitudAsync(Nu_Solicitud);
        }
        
        public WCFAplicationsMedical.WCFServiceSolicitud.Solicitud ModificarSolicitud(WCFAplicationsMedical.WCFServiceSolicitud.Solicitud SolicitudAModificar) {
            return base.Channel.ModificarSolicitud(SolicitudAModificar);
        }
        
        public System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceSolicitud.Solicitud> ModificarSolicitudAsync(WCFAplicationsMedical.WCFServiceSolicitud.Solicitud SolicitudAModificar) {
            return base.Channel.ModificarSolicitudAsync(SolicitudAModificar);
        }
        
        public void EliminarSolicitud(int Nu_Solicitud) {
            base.Channel.EliminarSolicitud(Nu_Solicitud);
        }
        
        public System.Threading.Tasks.Task EliminarSolicitudAsync(int Nu_Solicitud) {
            return base.Channel.EliminarSolicitudAsync(Nu_Solicitud);
        }
        
        public WCFAplicationsMedical.WCFServiceSolicitud.Solicitud[] ListarSolicitudes() {
            return base.Channel.ListarSolicitudes();
        }
        
        public System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceSolicitud.Solicitud[]> ListarSolicitudesAsync() {
            return base.Channel.ListarSolicitudesAsync();
        }
    }
}
