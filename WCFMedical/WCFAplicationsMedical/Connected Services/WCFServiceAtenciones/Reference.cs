//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFAplicationsMedical.WCFServiceAtenciones {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Atencion", Namespace="http://schemas.datacontract.org/2004/07/WCFServices.Dominio")]
    [System.SerializableAttribute()]
    public partial class Atencion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FecRegistroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoraFinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoraInicioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumDniField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumSolicitudField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NunAtencionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObservacionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FecRegistro {
            get {
                return this.FecRegistroField;
            }
            set {
                if ((object.ReferenceEquals(this.FecRegistroField, value) != true)) {
                    this.FecRegistroField = value;
                    this.RaisePropertyChanged("FecRegistro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HoraFin {
            get {
                return this.HoraFinField;
            }
            set {
                if ((object.ReferenceEquals(this.HoraFinField, value) != true)) {
                    this.HoraFinField = value;
                    this.RaisePropertyChanged("HoraFin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HoraInicio {
            get {
                return this.HoraInicioField;
            }
            set {
                if ((object.ReferenceEquals(this.HoraInicioField, value) != true)) {
                    this.HoraInicioField = value;
                    this.RaisePropertyChanged("HoraInicio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumDni {
            get {
                return this.NumDniField;
            }
            set {
                if ((this.NumDniField.Equals(value) != true)) {
                    this.NumDniField = value;
                    this.RaisePropertyChanged("NumDni");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumSolicitud {
            get {
                return this.NumSolicitudField;
            }
            set {
                if ((this.NumSolicitudField.Equals(value) != true)) {
                    this.NumSolicitudField = value;
                    this.RaisePropertyChanged("NumSolicitud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NunAtencion {
            get {
                return this.NunAtencionField;
            }
            set {
                if ((this.NunAtencionField.Equals(value) != true)) {
                    this.NunAtencionField = value;
                    this.RaisePropertyChanged("NunAtencion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Observacion {
            get {
                return this.ObservacionField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservacionField, value) != true)) {
                    this.ObservacionField = value;
                    this.RaisePropertyChanged("Observacion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFServices.Errores")]
    [System.SerializableAttribute()]
    public partial class RepetidoException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoField, value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFServiceAtenciones.IAtenciones")]
    public interface IAtenciones {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtenciones/CrearAtencion", ReplyAction="http://tempuri.org/IAtenciones/CrearAtencionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFAplicationsMedical.WCFServiceAtenciones.RepetidoException), Action="http://tempuri.org/IAtenciones/CrearAtencionRepetidoExceptionFault", Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFServices.Errores")]
        WCFAplicationsMedical.WCFServiceAtenciones.Atencion CrearAtencion(WCFAplicationsMedical.WCFServiceAtenciones.Atencion atencionACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtenciones/CrearAtencion", ReplyAction="http://tempuri.org/IAtenciones/CrearAtencionResponse")]
        System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceAtenciones.Atencion> CrearAtencionAsync(WCFAplicationsMedical.WCFServiceAtenciones.Atencion atencionACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtenciones/ObtenerAtencion", ReplyAction="http://tempuri.org/IAtenciones/ObtenerAtencionResponse")]
        WCFAplicationsMedical.WCFServiceAtenciones.Atencion ObtenerAtencion(int NunAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtenciones/ObtenerAtencion", ReplyAction="http://tempuri.org/IAtenciones/ObtenerAtencionResponse")]
        System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceAtenciones.Atencion> ObtenerAtencionAsync(int NunAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtenciones/ModificarAtencion", ReplyAction="http://tempuri.org/IAtenciones/ModificarAtencionResponse")]
        WCFAplicationsMedical.WCFServiceAtenciones.Atencion ModificarAtencion(WCFAplicationsMedical.WCFServiceAtenciones.Atencion atencionAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtenciones/ModificarAtencion", ReplyAction="http://tempuri.org/IAtenciones/ModificarAtencionResponse")]
        System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceAtenciones.Atencion> ModificarAtencionAsync(WCFAplicationsMedical.WCFServiceAtenciones.Atencion atencionAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtenciones/EliminarAtencion", ReplyAction="http://tempuri.org/IAtenciones/EliminarAtencionResponse")]
        void EliminarAtencion(int NunAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtenciones/EliminarAtencion", ReplyAction="http://tempuri.org/IAtenciones/EliminarAtencionResponse")]
        System.Threading.Tasks.Task EliminarAtencionAsync(int NunAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtenciones/ListarAtenciones", ReplyAction="http://tempuri.org/IAtenciones/ListarAtencionesResponse")]
        WCFAplicationsMedical.WCFServiceAtenciones.Atencion[] ListarAtenciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtenciones/ListarAtenciones", ReplyAction="http://tempuri.org/IAtenciones/ListarAtencionesResponse")]
        System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceAtenciones.Atencion[]> ListarAtencionesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAtencionesChannel : WCFAplicationsMedical.WCFServiceAtenciones.IAtenciones, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AtencionesClient : System.ServiceModel.ClientBase<WCFAplicationsMedical.WCFServiceAtenciones.IAtenciones>, WCFAplicationsMedical.WCFServiceAtenciones.IAtenciones {
        
        public AtencionesClient() {
        }
        
        public AtencionesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AtencionesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AtencionesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AtencionesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFAplicationsMedical.WCFServiceAtenciones.Atencion CrearAtencion(WCFAplicationsMedical.WCFServiceAtenciones.Atencion atencionACrear) {
            return base.Channel.CrearAtencion(atencionACrear);
        }
        
        public System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceAtenciones.Atencion> CrearAtencionAsync(WCFAplicationsMedical.WCFServiceAtenciones.Atencion atencionACrear) {
            return base.Channel.CrearAtencionAsync(atencionACrear);
        }
        
        public WCFAplicationsMedical.WCFServiceAtenciones.Atencion ObtenerAtencion(int NunAtencion) {
            return base.Channel.ObtenerAtencion(NunAtencion);
        }
        
        public System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceAtenciones.Atencion> ObtenerAtencionAsync(int NunAtencion) {
            return base.Channel.ObtenerAtencionAsync(NunAtencion);
        }
        
        public WCFAplicationsMedical.WCFServiceAtenciones.Atencion ModificarAtencion(WCFAplicationsMedical.WCFServiceAtenciones.Atencion atencionAModificar) {
            return base.Channel.ModificarAtencion(atencionAModificar);
        }
        
        public System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceAtenciones.Atencion> ModificarAtencionAsync(WCFAplicationsMedical.WCFServiceAtenciones.Atencion atencionAModificar) {
            return base.Channel.ModificarAtencionAsync(atencionAModificar);
        }
        
        public void EliminarAtencion(int NunAtencion) {
            base.Channel.EliminarAtencion(NunAtencion);
        }
        
        public System.Threading.Tasks.Task EliminarAtencionAsync(int NunAtencion) {
            return base.Channel.EliminarAtencionAsync(NunAtencion);
        }
        
        public WCFAplicationsMedical.WCFServiceAtenciones.Atencion[] ListarAtenciones() {
            return base.Channel.ListarAtenciones();
        }
        
        public System.Threading.Tasks.Task<WCFAplicationsMedical.WCFServiceAtenciones.Atencion[]> ListarAtencionesAsync() {
            return base.Channel.ListarAtencionesAsync();
        }
    }
}
